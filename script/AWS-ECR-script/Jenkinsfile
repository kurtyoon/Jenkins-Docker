pipeline {
    agent any
    
    triggers {
        pollSCM('*/3 * * * *') // 3분 주기로 변경사항을 체크
    }
    
    environment {
        AWS_ACCOUNT_ID = "301857435548"
        AWS_DEFAULT_REGION = "ap-northeast-2"
        NAME="docker-jenkins"
        IMAGE_NAME = "${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${NAME}"
        ECR_PATH="${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com"
        
        BRANCH="main"
    }
    
    stages {
        stage('Prepare') { // github 저장소 코드를 가져옴
            steps {
                git branch: "${BRANCH}", credentialsId: 'github', url: 'https://github.com/kurtyoon/Jenkins-Docker.git'            
            }
        }
        
        stage('Build and Tagging') { // docker 이미지를 빌드하고 태깅
            steps {
                sh '''
                docker build -t $IMAGE_NAME:$BUILD_NUMBER .
                docker tag $IMAGE_NAME:$BUILD_NUMBER $IMAGE_NAME:latest
                '''
            }
        }
        
        stage('upload aws ECR') { // 빌드된 docker image를 aws ecr에 업로드
            steps {
                script {
                    sh 'docker push ${IMAGE_NAME}:latest'
                    sh 'docker push ${IMAGE_NAME}:${BUILD_NUMBER}'
                }
            }
        }
        
        stage('Docker Purge') { // 사용하지 않는 docker 이미지를 정리, dockerDir()을 통해 jenkins 작업 공간을 삭제
            steps {
                sh 'docker image prune -fa'
                deleteDir()
            }
        }
    }
}